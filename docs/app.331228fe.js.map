{"version":3,"sources":["data.json","node_modules/@tilecloud/mbgl-gesture-handling/mbgl-gesture-handling.js","app.js"],"names":["module","exports","conflict","other","GestureHandling","constructor","options","id","count","timer","settings","backgroundColor","textColor","textMessage","textMessageMobile","timeout","helpElement","document","querySelector","createElement","style","position","display","zIndex","justifyContent","alignItems","textBox","textAlign","color","innerText","appendChild","body","showHelp","map","message","rect","getContainer","getBoundingClientRect","top","window","scrollY","left","scrollX","width","height","hideHelp","addTo","scrollZoom","disable","addEventListener","event","altKey","preventDefault","clearTimeout","setTimeout","isEnabled","enable","touches","length","dragPan","on","originalEvent","data","require","lut","Object","keys","k","iso3cd","labels","colors","overlay","getElementById","country","description","fetch","then","response","json","layers","layer","paint","mapboxgl","Map","container","maxZoom","attributionControl","hash","renderWorldCopies","dragRotate","touchZoomRotate","disableRotation","e","f","queryRenderedFeatures","point","classList","remove","state","properties","label","add","textContent","maplab","console","log"],"mappings":"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","file":"app.331228fe.js","sourceRoot":"..","sourcesContent":["module.exports={conflict:[\"AFG\",\"CAF\",\"COL\",\"COD\",\"IRQ\",\"LBY\",\"MLI\",\"MMR\",\"SOM\",\"SSD\",\"SDN\",\"SYR\",\"YEM\"],other:[\"BDI\",\"NGA\"],\"post-conflict\":[\"BIH\",\"CIV\",\"NPL\",\"LKA\"]};","\"use strict\"\n\nclass GestureHandling {\n  constructor(options) {\n    this.id = `mbgl-gesture-handling-help-container-${GestureHandling.count}`;\n    GestureHandling.count++;\n    this.timer = null;\n\n    this.settings = {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      textColor: '#ffffff',\n      textMessage: 'Use alt + scroll to zoom the map.',\n      textMessageMobile: 'Use two fingers to move the map.',\n      timeout: 2000,\n      ...options\n    };\n\n    this.helpElement = document.querySelector(`#${this.id}`);\n\n    if (null === this.helpElement) {\n      this.helpElement = document.createElement('div');\n      this.helpElement.id = this.id;\n      this.helpElement.style.backgroundColor = this.settings.backgroundColor;\n      this.helpElement.style.position = 'absolute';\n      this.helpElement.style.display = 'none';\n      this.helpElement.style.zIndex = 9999;\n      this.helpElement.style.justifyContent = 'center';\n      this.helpElement.style.alignItems = 'center';\n\n      const textBox = document.createElement('div');\n      textBox.style.textAlign = 'center';\n      textBox.style.color = this.settings.textColor;\n      textBox.innerText = \"\";\n\n      this.helpElement.appendChild(textBox);\n      document.body.appendChild(this.helpElement);\n    }\n  }\n\n  showHelp(map, message) {\n    const rect = map.getContainer().getBoundingClientRect();\n    this.helpElement.style.top = `${rect.top + window.scrollY}px`;\n    this.helpElement.style.left = `${rect.left + window.scrollX}px`;\n    this.helpElement.style.width = `${rect.width}px`;\n    this.helpElement.style.height = `${rect.height}px`;\n    this.helpElement.style.display = 'flex';\n\n    this.helpElement.querySelector('div').innerText = message;\n  }\n\n  hideHelp() {\n    this.helpElement.style.display = 'none';\n  }\n\n  addTo(map) {\n    map.scrollZoom.disable();\n\n    this.helpElement.addEventListener('wheel', (event) => {\n      if (event.altKey) {\n        event.preventDefault()\n        this.hideHelp();\n      } else {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.hideHelp();\n        }, this.settings.timeout);\n      }\n    });\n\n    map.getContainer().addEventListener('wheel', (event) => {\n      if (event.altKey) {\n        event.preventDefault()\n        if (! map.scrollZoom.isEnabled()) {\n          map.scrollZoom.enable();\n        }\n      } else {\n        map.scrollZoom.disable();\n        this.showHelp(map, this.settings.textMessage);\n        this.timer = setTimeout(() => {\n          this.hideHelp();\n        }, this.settings.timeout);\n      }\n    });\n\n    this.helpElement.addEventListener('touchstart', (event) => {\n      if (event.touches && 2 <= event.touches.length) {\n        clearTimeout(this.timer);\n        this.hideHelp();\n        map.dragPan.enable();\n        event.preventDefault();\n      }\n    });\n\n    map.on('movestart', (event) => {\n      if (event.originalEvent && 'touches' in event.originalEvent && 2 > event.originalEvent.touches.length) {\n        this.showHelp(map, this.settings.textMessageMobile);\n        map.dragPan.disable();\n        this.timer = setTimeout(() => {\n          map.dragPan.enable();\n          this.hideHelp();\n        }, this.settings.timeout);\n      }\n    });\n  }\n}\n\nGestureHandling.count = 0 // static\n\nexport default GestureHandling;\n","const data = require('./data.json')\nimport GestureHandling from '@tilecloud/mbgl-gesture-handling'\n\nconst lut = {}\nfor (let k of Object.keys(data)) {\n  for (let iso3cd of data[k]) {\n    lut[iso3cd] = k\n  }\n}\n\nconst labels = {\n  conflict: 'Sexual violence in conflict-affected settings',\n  'post-conflict': 'Sexual violence in post-conflict settings',\n  other: 'Other situations of concern'\n}\n\nconst colors = {\n  conflict: [\n    'rgb',\n    255,\n    142,\n    0\n  ],\n  'post-conflict': [\n    'rgb',\n    255,\n    0,\n    139\n  ],\n  other: [\n    'rgb',\n    113,\n    1,\n    149\n  ]\n}\n\nconst overlay = document.getElementById('overlay')\nconst country = document.getElementById('country')\nconst description = document.getElementById('description')\n\nfetch(\n  'https://un-vector-tile-toolkit.github.io/tentatiles/style.json'\n).then((response) => response.json()).then(style => {\n  for (let layer of style.layers) {\n    if (layer.id === 'bnda') {\n      layer.paint['fill-color'] = [\n        'match',\n        ['get', 'iso3cd'],\n        data.conflict,\n        colors.conflict,\n        data['post-conflict'],\n        colors['post-conflict'],\n        data.other,\n        colors.other,\n        ['rgb', 175, 226, 254]\n      ]\n    }\n  }\n  const map = new mapboxgl.Map({\n    container: 'map',\n    maxZoom: 2,\n    style: style,\n    attributionControl: true,\n    hash: true,\n    renderWorldCopies: false\n  })\n  map.dragRotate.disable()\n  map.touchZoomRotate.disableRotation()\n  new GestureHandling({\n    backgroundColor: 'rgba(207, 207, 207, 0.8)',\n    textColor: '#000',\n    timeout: 2000\n  }).addTo(map)\n\n  map.on('mousemove', (e) => {\n    const f = map.queryRenderedFeatures(e.point)[0]\n    if (f) {\n      overlay.classList.remove('default', 'conflict', 'post-conflict', 'other')\n      const state = lut[f.properties.iso3cd]\n      if (state) {\n        const label = labels[state]\n        overlay.classList.add(state)\n        country.textContent = f.properties.maplab\n        description.textContent = label\n        console.log(`${f.properties.maplab}: ${label} ${overlay.classList}`)\n      } else {\n        overlay.classList.add('default')\n        country.textContent = ''\n        description.textContent = ''\n      }\n    }\n  })\n\n  map.on('load', () => {\n  })\n})\n"]}